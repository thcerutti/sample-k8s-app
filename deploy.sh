#!/bin/bash

# Script para deploy da aplica√ß√£o no Kubernetes
set -e

echo "üöÄ Iniciando deploy da aplica√ß√£o sample-k8s-app no Kubernetes..."

# Verificar se kubectl est√° dispon√≠vel
if ! command -v kubectl &> /dev/null; then
    echo "‚ùå kubectl n√£o encontrado. Instale kubectl primeiro."
    exit 1
fi

# Verificar se o cluster est√° acess√≠vel
if ! kubectl cluster-info &> /dev/null; then
    echo "‚ùå N√£o foi poss√≠vel conectar ao cluster Kubernetes."
    echo "Verifique se o cluster est√° rodando e o kubectl est√° configurado."
    exit 1
fi

echo "‚úÖ Conectado ao cluster Kubernetes"

API_IMAGE_REPO="thcerutti/sample-k8s-app-api"
API_IMAGE_TAG="${API_IMAGE_TAG:-latest}"
FULL_API_IMAGE="${API_IMAGE_REPO}:${API_IMAGE_TAG}"

echo "üñº  Usando imagem p√∫blica da API: $FULL_API_IMAGE"
echo "    (Defina API_IMAGE_TAG=<tag> para usar uma tag espec√≠fica, ex: curto SHA do commit)"

echo "‚ÑπÔ∏è  Nenhum build local ser√° feito; imagem deve existir no Docker Hub."

# Aplicar manifestos Kubernetes
echo "üìã Aplicando manifestos Kubernetes..."

NAMESPACE="sample-k8s-app"
echo "  ‚Ä¢ Namespace: $NAMESPACE"

# Criar o namespace se n√£o existir
kubectl get namespace "$NAMESPACE" &> /dev/null || kubectl create namespace "$NAMESPACE"

echo "  ‚Ä¢ ConfigMaps..."
kubectl apply -n "$NAMESPACE" -f k8s/nginx-configmap.yaml
kubectl apply -n "$NAMESPACE" -f k8s/frontend-configmap.yaml

echo "  ‚Ä¢ Deployments... (API -> $FULL_API_IMAGE)"
kubectl apply -n "$NAMESPACE" -f k8s/api-deployment.yaml
kubectl apply -n "$NAMESPACE" -f k8s/frontend-deployment.yaml

echo "  ‚Ä¢ Services..."
kubectl apply -n "$NAMESPACE" -f k8s/api-service.yaml
kubectl apply -n "$NAMESPACE" -f k8s/frontend-service.yaml

# Aguardar os deployments ficarem prontos
echo "‚è≥ Aguardando deployments ficarem prontos..."
kubectl rollout status -n "$NAMESPACE" deployment/api-deployment
kubectl rollout status -n "$NAMESPACE" deployment/frontend-deployment

echo "‚úÖ Deploy conclu√≠do com sucesso!"

# Mostrar status
echo ""
echo "üìä Status da aplica√ß√£o:"
kubectl get pods,services -n "$NAMESPACE" -l 'app in (sample-k8s-api,sample-k8s-frontend)'

echo ""
echo "üåê Para acessar a aplica√ß√£o:"
echo "   Frontend: kubectl -n $NAMESPACE port-forward service/frontend-service 8080:80"
echo "   API:      kubectl -n $NAMESPACE port-forward service/api-service 3000:3000"
echo ""
echo "üìñ Para mais informa√ß√µes, veja k8s/README.md"
